// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int      @id @default(autoincrement())
  name       String
  surname    String
  email      String   @unique
  password   String
  cookingHours Float
  recipes    Recipe[]
}

model Recipe {
  id           Int           @id @default(autoincrement())
  hidden       Boolean
  creatorId    Int
  creator      User          @relation(fields: [creatorId], references: [id])
  recipeSteps  RecipeStep[]
  rating       Int
  price        Float
  image        String
  categories   String[]
  reviews      Review[]
}

model Review {
  id        Int    @id @default(autoincrement())
  recipe    Recipe @relation(fields: [recipeId], references: [id])
  recipeId  Int
  rating    Int
  opinion   String
}

model RecipeStep {
  id         Int        @id @default(autoincrement())
  description String
  recipe      Recipe    @relation(fields: [recipeId], references: [id])
  recipeId    Int

  // Polymorphic relation â€“ only one of the below will be used per step
  weightStep  WeightStep?
  mixStep     MixStep?
}

model WeightStep {
  id            Int         @id @default(autoincrement())
  recipeStep    RecipeStep  @relation(fields: [recipeStepId], references: [id])
  recipeStepId  Int         @unique
  ingredient    Ingredient  @relation(fields: [ingredientId], references: [id])
  ingredientId  Int
}

model MixStep {
  id            Int         @id @default(autoincrement())
  recipeStep    RecipeStep  @relation(fields: [recipeStepId], references: [id])
  recipeStepId  Int         @unique
  speed         Int
  temperature   Int
  duration      Int // seconds or minutes, depending on your frontend logic
}

model Ingredient {
  id       Int     @id @default(autoincrement())
  title    String
  amount   Float
  unit     String
  category String

  weightSteps WeightStep[]
}